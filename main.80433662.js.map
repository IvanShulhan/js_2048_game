{"version":3,"sources":["scripts/main.js"],"names":["scoreInfo","document","querySelector","bestScore","button","lose","win","isStart","count","bestCount","currentCube","cleareCube","forEach","row","i","renderCube","arr","map","cell","join","initCube","innerHTML","randomCell","val","Math","floor","random","randomStart","addEventListener","start","textContent","classList","add","remove","makeColumn","num","column","push","pushToCube","index","filterCube","slice","includes","pareCell","canMove","horizontal","vertical","reduce","acc","filter","el","length","areWin","best","ev","key","filtered","reverse"],"mappings":"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","file":"main.80433662.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst scoreInfo = document.querySelector('.game-score');\nconst bestScore = document.querySelector('.game-best-score');\nconst button = document.querySelector('.button');\n\nconst lose = document.querySelector('.message-lose');\nconst win = document.querySelector('.message-win');\nlet isStart = false;\nlet count = 0;\nlet bestCount = 0;\n\nconst currentCube = [\n  [ 0, 0, 0, 0 ],\n  [ 0, 0, 0, 0 ],\n  [ 0, 0, 0, 0 ],\n  [ 0, 0, 0, 0 ],\n];\n\nconst cleareCube = () => {\n  return currentCube.forEach(row => {\n    for (let i = 0; i < 4; i++) {\n      row[i] = 0;\n    }\n  });\n};\n\nconst renderCube = (arr) => {\n  return arr.map(row => {\n    return `<tr class=\"field-row\">\n      ${row.map(cell => {\n    return `<td class=\"field-cell ${cell > 0 ? `field-cell--${cell}` : ''}\">\n        ${cell > 0 ? cell : ''}\n        </td>`;\n  }).join('')}\n    </tr>`;\n  }).join('');\n};\n\nconst initCube = (arr) => {\n  const cube = document.querySelector('tbody');\n\n  cube.innerHTML = `\n    ${renderCube(arr)}\n  `;\n};\n\nconst randomCell = (val) => {\n  const row = Math.floor(Math.random() * 4);\n  const cell = Math.floor(Math.random() * 4);\n\n  if (currentCube[row][cell] > 0) {\n    randomCell(val);\n  } else {\n    currentCube[row][cell] = val;\n  }\n};\n\nconst randomStart = () => {\n  return Math.random() < 0.1 ? 4 : 2;\n};\n\nbutton.addEventListener('click', () => {\n  const start = document.querySelector('.message-start');\n\n  count = 0;\n  scoreInfo.textContent = count;\n\n  cleareCube(currentCube);\n\n  start.classList.add('hidden');\n  lose.classList.add('hidden');\n  win.classList.add('hidden');\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  isStart = true;\n\n  randomCell(randomStart());\n  randomCell(randomStart());\n\n  initCube(currentCube);\n});\n\nconst makeColumn = (num) => {\n  const column = [];\n\n  for (let i = 0; i < 4; i++) {\n    column.push(currentCube[i][num]);\n  }\n\n  return column;\n};\n\nconst pushToCube = (arr, index) => {\n  for (let i = 0; i < 4; i++) {\n    currentCube[i][index] = arr[i];\n  }\n};\n\nconst filterCube = (arr) => {\n  for (let i = 1; i < 4; i++) {\n    switch (true) {\n      case arr[i] === 0:\n        break;\n\n      case arr[i] > 0:\n        switch (i) {\n          case 1:\n            if (arr[0] === arr[1]) {\n              arr[0] = arr[1] * 2;\n              count += arr[0];\n              arr[1] = 0;\n              break;\n            }\n\n            if (arr[0] === 0) {\n              arr[0] = arr[1];\n              arr[1] = 0;\n            }\n            break;\n\n          case 2:\n            if (arr.slice(0, 2).includes(arr[2])) {\n              if (arr[1] === 0) {\n                arr[0] = arr[2] * 2;\n                count += arr[0];\n                arr[i] = 0;\n                break;\n              }\n\n              if (arr[1] === arr[2]) {\n                arr[1] = arr[2] * 2;\n                count += arr[1];\n                arr[2] = 0;\n                break;\n              }\n              break;\n            }\n\n            if (arr[0] === 0 && arr[1] === 0) {\n              arr[0] = arr[2];\n              arr[2] = 0;\n              break;\n            }\n\n            if (arr[1] === 0) {\n              arr[1] = arr[2];\n              arr[2] = 0;\n              break;\n            }\n            break;\n\n          case 3:\n            if (arr.slice(0, 3).includes(arr[3])) {\n              if (arr[2] === 0 && arr[1] === 0) {\n                arr[0] = arr[3] * 2;\n                count += arr[0];\n                arr[3] = 0;\n                break;\n              }\n\n              if (arr[2] === 0 && arr[1] === arr[3]) {\n                arr[1] = arr[3] * 2;\n                count += arr[1];\n                arr[3] = 0;\n                break;\n              }\n\n              if (arr[2] === arr[3]) {\n                arr[2] = arr[3] * 2;\n                count += arr[2];\n                arr[3] = 0;\n                break;\n              }\n              break;\n            }\n\n            if (arr[0] === 0 && arr[1] === 0 && arr[2] === 0) {\n              arr[0] = arr[3];\n              arr[3] = 0;\n              break;\n            }\n\n            if (arr[1] === 0 && arr[2] === 0) {\n              arr[1] = arr[3];\n              arr[3] = 0;\n              break;\n            }\n\n            if (arr[2] === 0) {\n              arr[2] = arr[3];\n              arr[3] = 0;\n              break;\n            }\n            break;\n        }\n    }\n  }\n\n  return arr;\n};\n\nconst pareCell = (arr) => {\n  for (let i = 1; i < 3; i++) {\n    if (arr[i - 1] === arr[i] || arr[i + 1] === arr[i]) {\n      return;\n    }\n  }\n\n  return 1;\n};\n\nconst canMove = () => {\n  const horizontal = [];\n  const vertical = [];\n  const num = currentCube.reduce((acc, row) =>\n    acc + row.filter(el => el === 0).length, 0);\n\n  if (!num) {\n    currentCube.forEach(el => {\n      horizontal.push(pareCell(el));\n    });\n\n    for (let i = 0; i < 4; i++) {\n      const column = makeColumn(i);\n\n      vertical.push(pareCell(column));\n    }\n  }\n\n  if (horizontal.filter(el => el === 1).length === 4\n    && vertical.filter(el => el === 1).length === 4) {\n    lose.classList.remove('hidden');\n  }\n};\n\nconst areWin = () => {\n  currentCube.forEach(row => {\n    row.forEach(cell => {\n      if (cell >= 2048) {\n        win.classList.remove('hidden');\n      }\n    });\n  });\n};\n\nconst best = () => {\n  if (count < bestCount) {\n    return;\n  }\n\n  bestCount = count;\n  bestScore.textContent = bestCount;\n};\n\ndocument.addEventListener('keydown', ev => {\n  if (!isStart) {\n    return;\n  }\n\n  if (ev.key === 'ArrowUp') {\n    for (let i = 0; i < 4; i++) {\n      const column = makeColumn(i);\n\n      const filtered = filterCube(column);\n\n      pushToCube(filtered, i);\n    }\n\n    randomCell(randomStart());\n    initCube(currentCube);\n  }\n\n  if (ev.key === 'ArrowDown') {\n    for (let i = 0; i < 4; i++) {\n      const column = makeColumn(i);\n\n      const filtered = filterCube(column.reverse());\n\n      pushToCube(filtered.reverse(), i);\n    }\n\n    randomCell(randomStart());\n    initCube(currentCube);\n  }\n\n  if (ev.key === 'ArrowLeft') {\n    for (let i = 0; i < 4; i++) {\n      const filtered = filterCube(currentCube[i]);\n\n      currentCube[i] = filtered;\n    }\n\n    randomCell(randomStart());\n    initCube(currentCube);\n  }\n\n  if (ev.key === 'ArrowRight') {\n    for (let i = 0; i < 4; i++) {\n      const filtered = filterCube(currentCube[i].reverse());\n\n      currentCube[i] = filtered.reverse();\n    }\n\n    randomCell(randomStart());\n    initCube(currentCube);\n  }\n\n  best();\n  areWin();\n  canMove();\n  scoreInfo.textContent = count;\n});\n"]}